#pragma checksum "F:\CSharp\TaMBase\TamGUI\MainPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "EDA644637CB0CFAA1B2C54289180EC3A"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TamGui
{
    partial class MainPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_Column(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Int32 value)
            {
                global::Windows.UI.Xaml.Controls.Grid.SetColumn(obj, value);
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_Row(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Int32 value)
            {
                global::Windows.UI.Xaml.Controls.Grid.SetRow(obj, value);
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMainPage_Bindings
        {
            private global::TamGui.MainPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.Image obj15;
            private global::Windows.UI.Xaml.Controls.Image obj16;
            private global::Windows.UI.Xaml.Controls.Image obj17;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;
            private static bool isobj15ColumnDisabled = false;
            private static bool isobj15RowDisabled = false;
            private static bool isobj16ColumnDisabled = false;
            private static bool isobj16RowDisabled = false;
            private static bool isobj17ColumnDisabled = false;
            private static bool isobj17RowDisabled = false;

            private MainPage_obj1_BindingsTracking bindingsTracking;

            public MainPage_obj1_Bindings()
            {
                this.bindingsTracking = new MainPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 64 && columnNumber == 34)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 57)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 72)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 142)
                {
                    isobj15ColumnDisabled = true;
                }
                else if (lineNumber == 42 && columnNumber == 202)
                {
                    isobj15RowDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 144)
                {
                    isobj16ColumnDisabled = true;
                }
                else if (lineNumber == 49 && columnNumber == 205)
                {
                    isobj16RowDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 136)
                {
                    isobj17ColumnDisabled = true;
                }
                else if (lineNumber == 56 && columnNumber == 193)
                {
                    isobj17RowDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // MainPage.xaml line 64
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // MainPage.xaml line 67
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // MainPage.xaml line 68
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // MainPage.xaml line 42
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 16: // MainPage.xaml line 49
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 17: // MainPage.xaml line 56
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // IMainPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::TamGui.MainPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::TamGui.MainPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::TamGui.GameViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_LevelName(obj.LevelName, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Moves(obj.Moves, phase);
                        this.Update_ViewModel_Times(obj.Times, phase);
                        this.Update_ViewModel_TheseusX(obj.TheseusX, phase);
                        this.Update_ViewModel_TheseusY(obj.TheseusY, phase);
                        this.Update_ViewModel_MinotaurX(obj.MinotaurX, phase);
                        this.Update_ViewModel_MinotaurY(obj.MinotaurY, phase);
                        this.Update_ViewModel_ExitX(obj.ExitX, phase);
                        this.Update_ViewModel_ExitY(obj.ExitY, phase);
                    }
                }
            }
            private void Update_ViewModel_LevelName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainPage.xaml line 64
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Moves(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 67
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Times(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 68
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void Update_ViewModel_TheseusX(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 42
                    if (!isobj15ColumnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Column(this.obj15, obj);
                    }
                }
            }
            private void Update_ViewModel_TheseusY(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 42
                    if (!isobj15RowDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Row(this.obj15, obj);
                    }
                }
            }
            private void Update_ViewModel_MinotaurX(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 49
                    if (!isobj16ColumnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Column(this.obj16, obj);
                    }
                }
            }
            private void Update_ViewModel_MinotaurY(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 49
                    if (!isobj16RowDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Row(this.obj16, obj);
                    }
                }
            }
            private void Update_ViewModel_ExitX(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 56
                    if (!isobj17ColumnDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Column(this.obj17, obj);
                    }
                }
            }
            private void Update_ViewModel_ExitY(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // MainPage.xaml line 56
                    if (!isobj17RowDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_Row(this.obj17, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MainPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<MainPage_obj1_Bindings> weakRefToBindingObj; 

                public MainPage_obj1_BindingsTracking(MainPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MainPage_obj1_Bindings>(obj);
                }

                public MainPage_obj1_Bindings TryGetBindingObject()
                {
                    MainPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MainPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::TamGui.GameViewModel obj = sender as global::TamGui.GameViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Moves(obj.Moves, DATA_CHANGED);
                                bindings.Update_ViewModel_Times(obj.Times, DATA_CHANGED);
                                bindings.Update_ViewModel_TheseusX(obj.TheseusX, DATA_CHANGED);
                                bindings.Update_ViewModel_TheseusY(obj.TheseusY, DATA_CHANGED);
                                bindings.Update_ViewModel_MinotaurX(obj.MinotaurX, DATA_CHANGED);
                                bindings.Update_ViewModel_MinotaurY(obj.MinotaurY, DATA_CHANGED);
                                bindings.Update_ViewModel_ExitX(obj.ExitX, DATA_CHANGED);
                                bindings.Update_ViewModel_ExitY(obj.ExitY, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Moves":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Moves(obj.Moves, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Times":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Times(obj.Times, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TheseusX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TheseusX(obj.TheseusX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TheseusY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_TheseusY(obj.TheseusY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MinotaurX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MinotaurX(obj.MinotaurX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MinotaurY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_MinotaurY(obj.MinotaurY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ExitX":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ExitX(obj.ExitX, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ExitY":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ExitY(obj.ExitY, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::TamGui.GameViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::TamGui.GameViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainPage.xaml line 13
                {
                    global::Windows.UI.Xaml.Controls.Button element2 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element2).Click += this.Button_Click;
                }
                break;
            case 3: // MainPage.xaml line 15
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element3 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element3).Click += this.Pause_Click;
                }
                break;
            case 4: // MainPage.xaml line 16
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element4 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element4).Click += this.Undo_Click;
                }
                break;
            case 5: // MainPage.xaml line 17
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element5 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element5).Click += this.AppBarButton_Click;
                }
                break;
            case 6: // MainPage.xaml line 31
                {
                    this.aGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8: // MainPage.xaml line 71
                {
                    this.up = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.up).Click += this.Button_Click_1;
                }
                break;
            case 9: // MainPage.xaml line 72
                {
                    this.left = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.left).Click += this.Button2_Click;
                }
                break;
            case 10: // MainPage.xaml line 73
                {
                    this.right = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.right).Click += this.Button3_Click;
                }
                break;
            case 11: // MainPage.xaml line 74
                {
                    this.down = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.down).Click += this.Button4_Click;
                }
                break;
            case 12: // MainPage.xaml line 75
                {
                    this.pause = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.pause).Click += this.Move_Pause_Click;
                }
                break;
            case 14: // MainPage.xaml line 68
                {
                    this.times = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 15: // MainPage.xaml line 42
                {
                    this.theseus = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 16: // MainPage.xaml line 49
                {
                    this.minotaur = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 17: // MainPage.xaml line 56
                {
                    this.exit = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    MainPage_obj1_Bindings bindings = new MainPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

